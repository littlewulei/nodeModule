function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import ProField from '@ant-design/pro-field';
import { createField } from '../../BaseForm';
/**
 * 最普通的 Text 组件
 * @param
 */

var ProFormField = React.forwardRef(function (_ref, ref) {
  var fieldProps = _ref.fieldProps,
      children = _ref.children,
      labelCol = _ref.labelCol,
      label = _ref.label,
      isDefaultDom = _ref.isDefaultDom,
      render = _ref.render,
      proFieldProps = _ref.proFieldProps,
      renderFormItem = _ref.renderFormItem,
      valueType = _ref.valueType,
      initialValue = _ref.initialValue,
      restProps = _objectWithoutProperties(_ref, ["fieldProps", "children", "labelCol", "label", "isDefaultDom", "render", "proFieldProps", "renderFormItem", "valueType", "initialValue"]);

  return /*#__PURE__*/React.createElement(React.Fragment, null, children || /*#__PURE__*/React.createElement(ProField, _extends({
    text: fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.value,
    mode: "edit",
    valueType: valueType || 'text',
    fieldProps: fieldProps
  }, proFieldProps, restProps, {
    ref: ref
  })));
});
export default createField(ProFormField);