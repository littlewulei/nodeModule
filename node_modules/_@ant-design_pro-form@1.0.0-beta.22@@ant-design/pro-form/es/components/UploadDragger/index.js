import "antd/es/upload/style";
import _Upload from "antd/es/upload";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { InboxOutlined } from '@ant-design/icons';
import { createField } from '../../BaseForm';
/**
 * 拖动上传组件
 * @param
 */

var ProFormUploadDragger = function ProFormUploadDragger(_ref) {
  var fieldProps = _ref.fieldProps,
      _ref$title = _ref.title,
      title = _ref$title === void 0 ? '单击或拖动文件到此区域进行上传' : _ref$title,
      _ref$icon = _ref.icon,
      icon = _ref$icon === void 0 ? /*#__PURE__*/React.createElement(InboxOutlined, null) : _ref$icon,
      _ref$description = _ref.description,
      description = _ref$description === void 0 ? '支持单次或批量上传' : _ref$description,
      action = _ref.action,
      accept = _ref.accept,
      children = _ref.children;
  return /*#__PURE__*/React.createElement(_Upload.Dragger, _extends({
    name: "files",
    action: action,
    accept: accept
  }, fieldProps), /*#__PURE__*/React.createElement("p", {
    className: "ant-upload-drag-icon"
  }, icon), /*#__PURE__*/React.createElement("p", {
    className: "ant-upload-text"
  }, title), /*#__PURE__*/React.createElement("p", {
    className: "ant-upload-hint"
  }, description), children);
};

export default createField(ProFormUploadDragger, {
  valuePropName: 'fileList',
  getValueFromEvent: function getValueFromEvent(value) {
    return value.fileList;
  }
});