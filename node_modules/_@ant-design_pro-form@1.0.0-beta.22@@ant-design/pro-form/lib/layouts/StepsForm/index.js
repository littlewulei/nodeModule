"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.StepsFormProvide = void 0;

require("antd/es/form/style");

var _form = _interopRequireDefault(require("antd/es/form"));

require("antd/es/steps/style");

var _steps = _interopRequireDefault(require("antd/es/steps"));

var _react = _interopRequireWildcard(require("react"));

var _toArray = _interopRequireDefault(require("rc-util/lib/Children/toArray"));

var _useMergedState3 = _interopRequireDefault(require("rc-util/lib/hooks/useMergedState"));

var _classnames = _interopRequireDefault(require("classnames"));

var _configProvider = require("antd/lib/config-provider");

var _StepForm = _interopRequireDefault(require("./StepForm"));

require("./index.less");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var StepsFormProvide = _react.default.createContext(undefined);

exports.StepsFormProvide = StepsFormProvide;

var StepsForm = function StepsForm(props) {
  var _useContext = (0, _react.useContext)(_configProvider.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var prefixCls = getPrefixCls('pro-form-steps-form');

  var current = props.current,
      onCurrentChange = props.onCurrentChange,
      stepsProps = props.stepsProps,
      onFinish = props.onFinish,
      rest = _objectWithoutProperties(props, ["current", "onCurrentChange", "stepsProps", "onFinish"]);

  var formDataRef = (0, _react.useRef)(new Map());
  var formMapRef = (0, _react.useRef)(new Map());

  var _useState = (0, _react.useState)([]),
      _useState2 = _slicedToArray(_useState, 2),
      formArray = _useState2[0],
      setFormArray = _useState2[1];
  /**
   * 受控的方式来操作表单
   */


  var _useMergedState = (0, _useMergedState3.default)(0, {
    value: props.current,
    onChange: props.onCurrentChange
  }),
      _useMergedState2 = _slicedToArray(_useMergedState, 2),
      step = _useMergedState2[0],
      setStep = _useMergedState2[1];
  /**
   * 注册一个form进入，方便进行 props 的修改
   */


  var regForm = (0, _react.useCallback)(function (name, formProps) {
    formMapRef.current.set(name, formProps);
  }, []);
  /**
   * 接触挂载掉这个 form，同时步数 -1
   */

  var unRegForm = (0, _react.useCallback)(function (name) {
    formMapRef.current.delete(name);
    formDataRef.current.delete(name);
  }, []);
  /**
   * children 计算完成之后，重新生成一下当前的步骤列表
   */

  (0, _react.useEffect)(function () {
    setFormArray(Array.from(formMapRef.current.keys()));
  }, [Array.from(formMapRef.current.keys()).join(',')]);
  /**
   * proForm处理了一下 from 的数据，在其中做了一些操作
   * 如果使用 Provider 自带的，自带的数据处理就无法生效了
   */

  var onFormFinish = (0, _react.useCallback)(function (name, formData) {
    formDataRef.current.set(name, formData); // 如果是最后一步

    if (step === formArray.length - 1) {
      if (!props.onFinish) {
        return;
      }

      var values = Array.from(formDataRef.current.values()).reduce(function (pre, cur) {
        return _objectSpread(_objectSpread({}, pre), cur);
      }, {});
      props.onFinish(values);
    }
  }, [step]);

  var stepsDom = /*#__PURE__*/_react.default.createElement(_steps.default, _extends({
    size: "small"
  }, stepsProps, {
    current: step,
    onChange: undefined
  }), formArray.map(function (item) {
    var itemProps = formMapRef.current.get(item);
    return /*#__PURE__*/_react.default.createElement(_steps.default.Step, {
      key: item,
      title: itemProps === null || itemProps === void 0 ? void 0 : itemProps.title
    });
  }));

  return /*#__PURE__*/_react.default.createElement("div", {
    className: prefixCls
  }, /*#__PURE__*/_react.default.createElement(_form.default.Provider, rest, props.renderSteps ? props.renderSteps(formArray.map(function (item) {
    var _formMapRef$current$g;

    return {
      key: item,
      title: (_formMapRef$current$g = formMapRef.current.get(item)) === null || _formMapRef$current$g === void 0 ? void 0 : _formMapRef$current$g.title
    };
  }), stepsDom) : stepsDom, /*#__PURE__*/_react.default.createElement(StepsFormProvide.Provider, {
    value: {
      keyArray: formArray,
      next: function next() {
        if (step > formArray.length - 2) {
          return;
        }

        setStep(step + 1);
      },
      pre: function pre() {
        if (step < 1) {
          return;
        }

        setStep(step - 1);
      },
      formMapRef: formMapRef,
      unRegForm: unRegForm,
      onFormFinish: onFormFinish
    }
  }, (0, _toArray.default)(props.children).map(function (item, index) {
    var itemProps = item.props;
    var name = itemProps.name || "".concat(index);
    regForm(name, itemProps);
    return /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)("".concat(prefixCls, "-step"), _defineProperty({}, "".concat(prefixCls, "-step-active"), step === index)),
      key: name
    }, _react.default.cloneElement(item, _objectSpread(_objectSpread({}, itemProps), {}, {
      name: name,
      step: index,
      key: name
    })));
  }))));
};

StepsForm.StepForm = _StepForm.default;
StepsForm.useForm = _form.default.useForm;
var _default = StepsForm;
exports.default = _default;